committed for glibc 2.31

Index: glibc-2.28/sysdeps/hurd/include/hurd/signal.h
===================================================================
--- glibc-2.28.orig/sysdeps/hurd/include/hurd/signal.h
+++ glibc-2.28/sysdeps/hurd/include/hurd/signal.h
@@ -11,6 +11,11 @@ libc_hidden_proto (_hurd_exception2signa
 libc_hidden_proto (_hurd_intr_rpc_mach_msg)
 libc_hidden_proto (_hurd_thread_sigstate)
 libc_hidden_proto (_hurd_raise_signal)
+libc_hidden_proto (_hurd_sigstate_set_global_rcv)
+libc_hidden_proto (_hurd_sigstate_lock)
+libc_hidden_proto (_hurd_sigstate_pending)
+libc_hidden_proto (_hurd_sigstate_unlock)
+libc_hidden_proto (_hurd_sigstate_delete)
 #endif
 #ifdef _HURD_SIGNAL_H_HIDDEN_DEF
 libc_hidden_def (_hurd_self_sigstate)
Index: glibc-2.28/hurd/hurdsig.c
===================================================================
--- glibc-2.28.orig/hurd/hurdsig.c
+++ glibc-2.28/hurd/hurdsig.c
@@ -171,6 +171,7 @@ _hurd_sigstate_delete (thread_t th
       free (ss);
     }
 }
+libc_hidden_def (_hurd_sigstate_delete)
 
 /* Make SS a global receiver, with pthread signal semantics.  */
 void
@@ -188,6 +189,7 @@ _hurd_sigstate_set_global_rcv (str
   assert (ss->thread != MACH_PORT_NULL);
   ss->actions[0].sa_handler = SIG_IGN;
 }
+libc_hidden_def (_hurd_sigstate_set_global_rcv)
 
 /* Check whether SS is a global receiver.  */
 static int
@@ -214,6 +216,8 @@ _hurd_sigstate_unlock (struct hurd_sigs
   if (sigstate_is_global_rcv (ss))
     __spin_unlock (&_hurd_global_sigstate->lock);
 }
+libc_hidden_def (_hurd_sigstate_lock)
+libc_hidden_def (_hurd_sigstate_unlock)
 
 /* Retreive a thread's full set of pending signals, including the global
    ones if appropriate.  SS must be locked.  */
@@ -250,6 +254,7 @@ _hurd_sigstate_pending (const stru
     __sigorset (&pending, &pending, &_hurd_global_sigstate->pending);
   return pending;
 }
+libc_hidden_def (_hurd_sigstate_pending)
 
 /* Clear a pending signal and return the associated detailed
    signal information. SS must be locked, and must have signal SIGNO
