diff --git a/manual/Makefile b/manual/Makefile
index c61e11dcd7..67e13904bb 100644
--- a/manual/Makefile
+++ b/manual/Makefile
@@ -1,4 +1,5 @@
-# Copyright (C) 1992-2020 Free Software Foundation, Inc.
+# Copyright (C) 1992-2012
+#	Free Software Foundation, Inc.
 # This file is part of the GNU C Library.
 
 # The GNU C Library is free software; you can redistribute it and/or
@@ -13,16 +14,20 @@
 
 # You should have received a copy of the GNU Lesser General Public
 # License along with the GNU C Library; if not, see
-# <https://www.gnu.org/licenses/>.
+# <http://www.gnu.org/licenses/>.
 
 # Makefile for the GNU C Library manual.
 
 subdir := manual
 
-include ../Makeconfig
+# Allow override
+INSTALL_INFO = install-info
 
 .PHONY: dvi pdf info html
 
+# Get glibc's configuration info.
+include ../Makeconfig
+
 dvi: $(objpfx)libc.dvi
 pdf: $(objpfx)libc.pdf
 
@@ -37,25 +42,26 @@ chapters = $(addsuffix .texi, \
 		       intro errno memory ctype string charset locale	\
 		       message search pattern io stdio llio filesys	\
 		       pipe socket terminal syslog math arith time	\
-		       resource setjmp signal startup process ipc job	\
-		       nss users sysinfo conf crypt debug threads	\
-		       probes tunables)
+		       resource setjmp signal startup process job nss	\
+		       users sysinfo conf crypt debug)
+add-chapters = $(wildcard $(foreach d, $(add-ons), ../$d/$d.texi))
 appendices = lang.texi header.texi install.texi maint.texi platform.texi \
 	     contrib.texi
 licenses = freemanuals.texi lgpl-2.1.texi fdl-1.3.texi
 
 -include $(objpfx)texis
-$(objpfx)texis: texis.awk $(chapters) $(appendices) $(licenses)
+$(objpfx)texis: texis.awk $(chapters) $(add-chapters) $(appendices) $(licenses)
 	$(make-target-directory)
 	$(AWK) -f $^ > $@.T
 	mv -f $@.T $@
 
-nonexamples = $(filter-out %.c.texi, $(texis))
-examples = $(filter %.c.texi, $(texis))
+nonexamples = $(filter-out $(add-chapters) %.c.texi, $(texis))
+examples = $(filter-out $(foreach d, $(add-ons), ../$d/%.c.texi), \
+			$(filter %.c.texi, $(texis)))
 
 # Generated files directly included from libc.texinfo.
 libc-texi-generated = chapters.texi top-menu.texi dir-add.texi \
-		      libm-err.texi version.texi pkgvers.texi
+		      libm-err.texi version.texi
 
 # Add path to build dir for generated files
 texis-path := $(filter-out $(libc-texi-generated) summary.texi $(examples), \
@@ -67,6 +73,7 @@ texis-path := $(filter-out $(libc-texi-generated) summary.texi $(examples), \
 chapters.% top-menu.%: libc-texinfo.sh $(texis-path) Makefile
 	AWK=$(AWK) $(SHELL) $< $(objpfx) \
 				'$(chapters)' \
+			       '$(add-chapters)' \
 			       '$(appendices) $(licenses)'
 
 
@@ -80,10 +87,10 @@ $(objpfx)libc/index.html: $(addprefix $(objpfx),$(libc-texi-generated))
 
 # Generate the summary from the Texinfo source files for each chapter.
 $(objpfx)summary.texi: $(objpfx)stamp-summary ;
-$(objpfx)stamp-summary: summary.pl $(filter-out $(objpfx)summary.texi, \
+$(objpfx)stamp-summary: summary.awk $(filter-out $(objpfx)summary.texi, \
 					$(texis-path))
-	$(SHELL) ./check-safety.sh $(filter-out $(objpfx)%, $(texis-path))
-	LC_ALL=C $(PERL) $^ > $(objpfx)summary-tmp
+	$(AWK) -f $^ | sort -t'' -df -k 1,1 | tr '\014' '\012' \
+		> $(objpfx)summary-tmp
 	$(move-if-change) $(objpfx)summary-tmp $(objpfx)summary.texi
 	touch $@
 
@@ -99,28 +106,13 @@ $(objpfx)dir-add.texi: xtract-typefun.awk $(texis-path)
 
 # The table with the math errors is generated.
 $(objpfx)libm-err.texi: $(objpfx)stamp-libm-err
-$(objpfx)stamp-libm-err: $(..)math/gen-libm-test.py \
-			 $(wildcard $(foreach dir,$(sysdirs),\
-						  $(dir)/libm-test-ulps))
+$(objpfx)stamp-libm-err: libm-err-tab.pl $(wildcard $(foreach dir,$(sysdirs),\
+						     $(dir)/libm-test-ulps))
 	pwd=`pwd`; \
-	$(PYTHON) $< -s $$pwd/.. -m $(objpfx)libm-err-tmp
+	$(PERL) $< $$pwd/.. > $(objpfx)libm-err-tmp
 	$(move-if-change) $(objpfx)libm-err-tmp $(objpfx)libm-err.texi
 	touch $@
 
-# Package version and bug reporting URL.
-$(objpfx)pkgvers.texi: $(objpfx)stamp-pkgvers ;
-$(objpfx)stamp-pkgvers: $(common-objpfx)config.make
-	echo "@ifclear PKGVERS" > $(objpfx)pkgvers-tmp
-	echo "@set PKGVERS" >> $(objpfx)pkgvers-tmp
-	echo "@set PKGVERSION $(PKGVERSION_TEXI)" >> $(objpfx)pkgvers-tmp
-	if [ "$(PKGVERSION_TEXI)" = "(GNU libc) " ]; then \
-	  echo "@set PKGVERSION_DEFAULT" >> $(objpfx)pkgvers-tmp; \
-	fi
-	echo "@set REPORT_BUGS_TO $(REPORT_BUGS_TEXI)" >> $(objpfx)pkgvers-tmp
-	echo "@end ifclear" >> $(objpfx)pkgvers-tmp
-	$(move-if-change) $(objpfx)pkgvers-tmp $(objpfx)pkgvers.texi
-	touch $@
-
 # Generate a file with the version number.
 $(objpfx)version.texi: $(objpfx)stamp-version ;
 $(objpfx)stamp-version: $(common-objpfx)config.make
@@ -151,28 +143,25 @@ $(objpfx)%.pdf: %.texinfo
 
 
 # Distribution.
-minimal-dist = summary.pl texis.awk tsort.awk libc-texinfo.sh libc.texinfo \
-	       libm-err.texi stamp-libm-err check-safety.sh		    \
+minimal-dist = summary.awk texis.awk tsort.awk libc-texinfo.sh libc.texinfo \
+	       libm-err.texi stamp-libm-err				    \
 	       $(filter-out summary.texi, $(nonexamples))		    \
 	       $(patsubst %.c.texi,examples/%.c, $(examples))
 
 indices = cp fn pg tp vr ky
-generated-dirs += libc
-generated += libc.dvi libc.pdf libc.tmp libc.info*			      \
-	     stubs							      \
-	     texis summary.texi stamp-summary *.c.texi			      \
-	     $(foreach index,$(indices),libc.$(index) libc.$(index)s)	      \
-	     libc.log libc.aux libc.toc					      \
-	     $(libc-texi-generated)					      \
-	     stamp-libm-err stamp-version
+generated-dirs := libc
+generated = libc.dvi libc.pdf libc.tmp libc.info*			    \
+	stubs								    \
+	texis summary.texi stamp-summary *.c.texi			    \
+	$(foreach index,$(indices),libc.$(index) libc.$(index)s)	    \
+	libc.log libc.aux libc.toc					    \
+	$(libc-texi-generated)						    \
+	stamp-libm-err stamp-version
 
 include ../Rules
 
 .PHONY: install subdir_install install-data
 install-data subdir_install: install
-# Generated files requiring python: libm-err.texi
-# Generated files requiring perl: summary.texi
-ifneq ($(PERL),no)
 ifneq ($(strip $(MAKEINFO)),:)
 install: $(inst_infodir)/libc.info
 	@if $(SHELL) -c '$(INSTALL_INFO) --version' >/dev/null 2>&1; then \
@@ -180,7 +169,6 @@ install: $(inst_infodir)/libc.info
 	 $(INSTALL_INFO) --info-dir=$(inst_infodir) $(inst_infodir)/libc.info;\
 	else : ; fi
 endif
-endif
 # Catchall implicit rule for other installation targets from the parent.
 install-%: ;
 
diff --git a/sysdeps/gnu/Makefile b/sysdeps/gnu/Makefile
index 97fcb6fb90..a6bfc94870 100644
--- a/sysdeps/gnu/Makefile
+++ b/sysdeps/gnu/Makefile
@@ -18,7 +18,7 @@
 # Generate the list of strings for errno codes from the section of the
 # manual which documents the codes.
 
-$(..)sysdeps/gnu/errlist.c: $(..)sysdeps/gnu/errlist.awk \
+$(..)sysdeps/gnu/errlist-disabled.c: $(..)sysdeps/gnu/errlist.awk \
 			    $(..)manual/errno.texi
 	$(AWK) -f $^ > $@-tmp
 # Make it unwritable so noone will edit it by mistake.
diff --git a/sysdeps/mach/hurd/Makefile b/sysdeps/mach/hurd/Makefile
index 039bcfc041..b387c5e6b4 100644
--- a/sysdeps/mach/hurd/Makefile
+++ b/sysdeps/mach/hurd/Makefile
@@ -88,7 +88,7 @@ $(common-objpfx)errnos.d: $(mach-errnos-deps)
 	    -e 's, \.\./, $(..),g' > $@t
 	mv -f $@t $@
 
-$(hurd)/bits/errno.h: $(common-objpfx)stamp-errnos ;
+$(hurd)/bits/errno-disabled.h: $(common-objpfx)stamp-errnos ;
 $(common-objpfx)stamp-errnos: $(hurd)/errnos.awk $(errno.texinfo) \
 			      $(mach-errnos-deps) $(common-objpfx)errnos.d
 	mkdir -p $(hurd-objpfx)bits
