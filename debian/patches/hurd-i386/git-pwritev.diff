commit 200fc24b9dd2360bc850fe71ed22410051426d96
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sun Jan 7 13:31:36 2018 +0100

    hurd: Fix pwritev*
    
    This follows c45d78aac ('posix: Fix generic p{read,write}v buffer allocation
    (BZ#22457)'), which made pwritev to use __mmap instead of __posix_memalign,
    but didn't pass PROT_READ to it, while the pwrite() call does need to
    read the data we have just copied over.
    
            * sysdeps/posix/pwritev_common.c: Add PROT_READ to __mmap prot.

diff --git a/sysdeps/posix/pwritev_common.c b/sysdeps/posix/pwritev_common.c
index bd0f5c5257..344ab4d61b 100644
--- a/sysdeps/posix/pwritev_common.c
+++ b/sysdeps/posix/pwritev_common.c
@@ -55,7 +55,7 @@ PWRITEV (int fd, const struct iovec *vector, int count, OFF_T offset)
      but 1. it is system specific (not meant in generic implementation), and
      2. it would make the implementation more complex, and 3. it will require
      another syscall (fcntl).  */
-  void *buffer = __mmap (NULL, bytes, PROT_WRITE,
+  void *buffer = __mmap (NULL, bytes, PROT_READ | PROT_WRITE,
 		         MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
   if (__glibc_unlikely (buffer == MAP_FAILED))
     return -1;
